# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Maciej Olko <maciej.olko@gmail.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-24 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Maciej Olko <maciej.olko@gmail.com>, 2021\n"
"Language-Team: Polish (https://www.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid "Bytes Objects"
msgstr ""

msgid ""
"These functions raise :exc:`TypeError` when expecting a bytes parameter and "
"called with a non-bytes parameter."
msgstr ""

msgid "This subtype of :c:type:`PyObject` represents a Python bytes object."
msgstr ""

msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python bytes type; it "
"is the same object as :class:`bytes` in the Python layer."
msgstr ""

msgid ""
"Return true if the object *o* is a bytes object or an instance of a subtype "
"of the bytes type.  This function always succeeds."
msgstr ""

msgid ""
"Return true if the object *o* is a bytes object, but not an instance of a "
"subtype of the bytes type.  This function always succeeds."
msgstr ""

msgid ""
"Return a new bytes object with a copy of the string *v* as value on success, "
"and ``NULL`` on failure.  The parameter *v* must not be ``NULL``; it will "
"not be checked."
msgstr ""

msgid ""
"Return a new bytes object with a copy of the string *v* as value and length "
"*len* on success, and ``NULL`` on failure.  If *v* is ``NULL``, the contents "
"of the bytes object are uninitialized."
msgstr ""

msgid ""
"Take a C :c:func:`printf`\\ -style *format* string and a variable number of "
"arguments, calculate the size of the resulting Python bytes object and "
"return a bytes object with the values formatted into it.  The variable "
"arguments must be C types and must correspond exactly to the format "
"characters in the *format* string.  The following format characters are "
"allowed:"
msgstr ""

msgid "Format Characters"
msgstr ""

msgid "Type"
msgstr ""

msgid "Comment"
msgstr ""

msgid ":attr:`%%`"
msgstr ""

msgid "*n/a*"
msgstr ""

msgid "The literal % character."
msgstr ""

msgid ":attr:`%c`"
msgstr ""

msgid "int"
msgstr "int"

msgid "A single byte, represented as a C int."
msgstr ""

msgid ":attr:`%d`"
msgstr ""

msgid "Equivalent to ``printf(\"%d\")``. [1]_"
msgstr ""

msgid ":attr:`%u`"
msgstr ""

msgid "unsigned int"
msgstr "nieoznaczony typ int"

msgid "Equivalent to ``printf(\"%u\")``. [1]_"
msgstr ""

msgid ":attr:`%ld`"
msgstr ""

msgid "long"
msgstr ""

msgid "Equivalent to ``printf(\"%ld\")``. [1]_"
msgstr ""

msgid ":attr:`%lu`"
msgstr ""

msgid "unsigned long"
msgstr "nieoznaczony typ dÅ‚ugi"

msgid "Equivalent to ``printf(\"%lu\")``. [1]_"
msgstr ""

msgid ":attr:`%zd`"
msgstr ""

msgid ":c:type:`\\ Py_ssize_t`"
msgstr ""

msgid "Equivalent to ``printf(\"%zd\")``. [1]_"
msgstr ""

msgid ":attr:`%zu`"
msgstr ""

msgid "size_t"
msgstr ""

msgid "Equivalent to ``printf(\"%zu\")``. [1]_"
msgstr ""

msgid ":attr:`%i`"
msgstr ""

msgid "Equivalent to ``printf(\"%i\")``. [1]_"
msgstr ""

msgid ":attr:`%x`"
msgstr ""

msgid "Equivalent to ``printf(\"%x\")``. [1]_"
msgstr ""

msgid ":attr:`%s`"
msgstr ""

msgid "const char\\*"
msgstr ""

msgid "A null-terminated C character array."
msgstr ""

msgid ":attr:`%p`"
msgstr ""

msgid "const void\\*"
msgstr ""

msgid ""
"The hex representation of a C pointer. Mostly equivalent to "
"``printf(\"%p\")`` except that it is guaranteed to start with the literal "
"``0x`` regardless of what the platform's ``printf`` yields."
msgstr ""

msgid ""
"An unrecognized format character causes all the rest of the format string to "
"be copied as-is to the result object, and any extra arguments discarded."
msgstr ""

msgid ""
"For integer specifiers (d, u, ld, lu, zd, zu, i, x): the 0-conversion flag "
"has effect even when a precision is given."
msgstr ""

msgid ""
"Identical to :c:func:`PyBytes_FromFormat` except that it takes exactly two "
"arguments."
msgstr ""

msgid ""
"Return the bytes representation of object *o* that implements the buffer "
"protocol."
msgstr ""

msgid "Return the length of the bytes in bytes object *o*."
msgstr ""

msgid "Similar to :c:func:`PyBytes_Size`, but without error checking."
msgstr ""

msgid ""
"Return a pointer to the contents of *o*.  The pointer refers to the internal "
"buffer of *o*, which consists of ``len(o) + 1`` bytes.  The last byte in the "
"buffer is always null, regardless of whether there are any other null "
"bytes.  The data must not be modified in any way, unless the object was just "
"created using ``PyBytes_FromStringAndSize(NULL, size)``. It must not be "
"deallocated.  If *o* is not a bytes object at all, :c:func:"
"`PyBytes_AsString` returns ``NULL`` and raises :exc:`TypeError`."
msgstr ""

msgid "Similar to :c:func:`PyBytes_AsString`, but without error checking."
msgstr ""

msgid ""
"Return the null-terminated contents of the object *obj* through the output "
"variables *buffer* and *length*."
msgstr ""

msgid ""
"If *length* is ``NULL``, the bytes object may not contain embedded null "
"bytes; if it does, the function returns ``-1`` and a :exc:`ValueError` is "
"raised."
msgstr ""

msgid ""
"The buffer refers to an internal buffer of *obj*, which includes an "
"additional null byte at the end (not counted in *length*).  The data must "
"not be modified in any way, unless the object was just created using "
"``PyBytes_FromStringAndSize(NULL, size)``.  It must not be deallocated.  If "
"*obj* is not a bytes object at all, :c:func:`PyBytes_AsStringAndSize` "
"returns ``-1`` and raises :exc:`TypeError`."
msgstr ""

msgid ""
"Previously, :exc:`TypeError` was raised when embedded null bytes were "
"encountered in the bytes object."
msgstr ""

msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*; the caller will own the new reference.  The reference "
"to the old value of *bytes* will be stolen.  If the new object cannot be "
"created, the old reference to *bytes* will still be discarded and the value "
"of *\\*bytes* will be set to ``NULL``; the appropriate exception will be set."
msgstr ""

msgid ""
"Create a new bytes object in *\\*bytes* containing the contents of *newpart* "
"appended to *bytes*.  This version decrements the reference count of "
"*newpart*."
msgstr ""

msgid ""
"A way to resize a bytes object even though it is \"immutable\". Only use "
"this to build up a brand new bytes object; don't use this if the bytes may "
"already be known in other parts of the code.  It is an error to call this "
"function if the refcount on the input bytes object is not one. Pass the "
"address of an existing bytes object as an lvalue (it may be written into), "
"and the new size desired.  On success, *\\*bytes* holds the resized bytes "
"object and ``0`` is returned; the address in *\\*bytes* may differ from its "
"input value.  If the reallocation fails, the original bytes object at "
"*\\*bytes* is deallocated, *\\*bytes* is set to ``NULL``, :exc:`MemoryError` "
"is set, and ``-1`` is returned."
msgstr ""
