# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Stefan Ocetkiewicz <stefan.ocetkiewicz@gmail.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-24 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:14+0000\n"
"Last-Translator: Stefan Ocetkiewicz <stefan.ocetkiewicz@gmail.com>, 2021\n"
"Language-Team: Polish (https://www.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid ":mod:`sunau` --- Read and write Sun AU files"
msgstr ""

msgid "**Source code:** :source:`Lib/sunau.py`"
msgstr ""

msgid ""
"The :mod:`sunau` module is deprecated (see :pep:`PEP 594 <594#sunau>` for "
"details)."
msgstr ""

msgid ""
"The :mod:`sunau` module provides a convenient interface to the Sun AU sound "
"format.  Note that this module is interface-compatible with the modules :mod:"
"`aifc` and :mod:`wave`."
msgstr ""

msgid ""
"An audio file consists of a header followed by the data.  The fields of the "
"header are:"
msgstr ""

msgid "Field"
msgstr ""

msgid "Contents"
msgstr "Zawartość"

msgid "magic word"
msgstr ""

msgid "The four bytes ``.snd``."
msgstr ""

msgid "header size"
msgstr ""

msgid "Size of the header, including info, in bytes."
msgstr ""

msgid "data size"
msgstr ""

msgid "Physical size of the data, in bytes."
msgstr ""

msgid "encoding"
msgstr ""

msgid "Indicates how the audio samples are encoded."
msgstr ""

msgid "sample rate"
msgstr ""

msgid "The sampling rate."
msgstr ""

msgid "# of channels"
msgstr ""

msgid "The number of channels in the samples."
msgstr ""

msgid "info"
msgstr ""

msgid ""
"ASCII string giving a description of the audio file (padded with null bytes)."
msgstr ""

msgid ""
"Apart from the info field, all header fields are 4 bytes in size. They are "
"all 32-bit unsigned integers encoded in big-endian byte order."
msgstr ""

msgid "The :mod:`sunau` module defines the following functions:"
msgstr ""

msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"seekable file-like object. *mode* can be any of"
msgstr ""

msgid "``'r'``"
msgstr ""

msgid "Read only mode."
msgstr ""

msgid "``'w'``"
msgstr ""

msgid "Write only mode."
msgstr ""

msgid "Note that it does not allow read/write files."
msgstr ""

msgid ""
"A *mode* of ``'r'`` returns an :class:`AU_read` object, while a *mode* of "
"``'w'`` or ``'wb'`` returns an :class:`AU_write` object."
msgstr ""

msgid "The :mod:`sunau` module defines the following exception:"
msgstr ""

msgid ""
"An error raised when something is impossible because of Sun AU specs or "
"implementation deficiency."
msgstr ""

msgid "The :mod:`sunau` module defines the following data items:"
msgstr ""

msgid ""
"An integer every valid Sun AU file begins with, stored in big-endian form.  "
"This is the string ``.snd`` interpreted as an integer."
msgstr ""

msgid ""
"Values of the encoding field from the AU header which are supported by this "
"module."
msgstr ""

msgid ""
"Additional known values of the encoding field from the AU header, but which "
"are not supported by this module."
msgstr ""

msgid "AU_read Objects"
msgstr ""

msgid ""
"AU_read objects, as returned by :func:`.open` above, have the following "
"methods:"
msgstr ""

msgid ""
"Close the stream, and make the instance unusable. (This is  called "
"automatically on deletion.)"
msgstr ""

msgid "Returns number of audio channels (1 for mono, 2 for stereo)."
msgstr ""

msgid "Returns sample width in bytes."
msgstr ""

msgid "Returns sampling frequency."
msgstr ""

msgid "Returns number of audio frames."
msgstr ""

msgid ""
"Returns compression type. Supported compression types are ``'ULAW'``, "
"``'ALAW'`` and ``'NONE'``."
msgstr ""

msgid ""
"Human-readable version of :meth:`getcomptype`.  The supported types have the "
"respective names ``'CCITT G.711 u-law'``, ``'CCITT G.711 A-law'`` and ``'not "
"compressed'``."
msgstr ""

msgid ""
"Returns a :func:`~collections.namedtuple` ``(nchannels, sampwidth, "
"framerate, nframes, comptype, compname)``, equivalent to output of the :meth:"
"`get\\*` methods."
msgstr ""

msgid ""
"Reads and returns at most *n* frames of audio, as a :class:`bytes` object.  "
"The data will be returned in linear format.  If the original data is in u-"
"LAW format, it will be converted."
msgstr ""

msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr ""

msgid ""
"The following two methods define a term \"position\" which is compatible "
"between them, and is otherwise implementation dependent."
msgstr ""

msgid ""
"Set the file pointer to the specified position.  Only values returned from :"
"meth:`tell` should be used for *pos*."
msgstr ""

msgid ""
"Return current file pointer position.  Note that the returned value has "
"nothing to do with the actual position in the file."
msgstr ""

msgid ""
"The following two functions are defined for compatibility with the  :mod:"
"`aifc`, and don't do anything interesting."
msgstr ""

msgid "Returns ``None``."
msgstr ""

msgid "Raise an error."
msgstr ""

msgid "AU_write Objects"
msgstr ""

msgid ""
"AU_write objects, as returned by :func:`.open` above, have the following "
"methods:"
msgstr ""

msgid "Set the number of channels."
msgstr ""

msgid "Set the sample width (in bytes.)"
msgstr ""

msgid "Added support for 24-bit samples."
msgstr ""

msgid "Set the frame rate."
msgstr ""

msgid ""
"Set the number of frames. This can be later changed, when and if more  "
"frames are written."
msgstr ""

msgid ""
"Set the compression type and description. Only ``'NONE'`` and ``'ULAW'`` are "
"supported on output."
msgstr ""

msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype, "
"compname)``, with values valid for the :meth:`set\\*` methods.  Set all "
"parameters."
msgstr ""

msgid ""
"Return current position in the file, with the same disclaimer for the :meth:"
"`AU_read.tell` and :meth:`AU_read.setpos` methods."
msgstr ""

msgid "Write audio frames, without correcting *nframes*."
msgstr ""

msgid "Any :term:`bytes-like object` is now accepted."
msgstr ""

msgid "Write audio frames and make sure *nframes* is correct."
msgstr ""

msgid "Make sure *nframes* is correct, and close the file."
msgstr ""

msgid "This method is called upon deletion."
msgstr ""

msgid ""
"Note that it is invalid to set any parameters after calling  :meth:"
"`writeframes` or :meth:`writeframesraw`."
msgstr ""
