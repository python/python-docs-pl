# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Maciej Olko <maciej.olko@gmail.com>, 2021
# Waldemar Stoczkowski, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-24 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:18+0000\n"
"Last-Translator: Waldemar Stoczkowski, 2023\n"
"Language-Team: Polish (https://www.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid ":mod:`zipfile` --- Work with ZIP archives"
msgstr ""

msgid "**Source code:** :source:`Lib/zipfile.py`"
msgstr ""

msgid ""
"The ZIP file format is a common archive and compression standard. This "
"module provides tools to create, read, write, append, and list a ZIP file.  "
"Any advanced use of this module will require an understanding of the format, "
"as defined in `PKZIP Application Note`_."
msgstr ""

msgid ""
"This module does not currently handle multi-disk ZIP files. It can handle "
"ZIP files that use the ZIP64 extensions (that is ZIP files that are more "
"than 4 GiB in size).  It supports decryption of encrypted files in ZIP "
"archives, but it currently cannot create an encrypted file.  Decryption is "
"extremely slow as it is implemented in native Python rather than C."
msgstr ""

msgid "The module defines the following items:"
msgstr "Moduł definiuje następujące pozycje:"

msgid "The error raised for bad ZIP files."
msgstr ""

msgid ""
"Alias of :exc:`BadZipFile`, for compatibility with older Python versions."
msgstr ""

msgid ""
"The error raised when a ZIP file would require ZIP64 functionality but that "
"has not been enabled."
msgstr ""

msgid ""
"The class for reading and writing ZIP files.  See section :ref:`zipfile-"
"objects` for constructor details."
msgstr ""

msgid ""
"Class that implements a subset of the interface provided by :class:`pathlib."
"Path`, including the full :class:`importlib.resources.abc.Traversable` "
"interface."
msgstr ""

msgid "Class for creating ZIP archives containing Python libraries."
msgstr ""

msgid ""
"Class used to represent information about a member of an archive. Instances "
"of this class are returned by the :meth:`.getinfo` and :meth:`.infolist` "
"methods of :class:`ZipFile` objects.  Most users of the :mod:`zipfile` "
"module will not need to create these, but only use those created by this "
"module. *filename* should be the full name of the archive member, and "
"*date_time* should be a tuple containing six fields which describe the time "
"of the last modification to the file; the fields are described in section :"
"ref:`zipinfo-objects`."
msgstr ""

msgid ""
"Returns ``True`` if *filename* is a valid ZIP file based on its magic "
"number, otherwise returns ``False``.  *filename* may be a file or file-like "
"object too."
msgstr ""

msgid "Support for file and file-like objects."
msgstr ""

msgid "The numeric constant for an uncompressed archive member."
msgstr ""

msgid ""
"The numeric constant for the usual ZIP compression method.  This requires "
"the :mod:`zlib` module."
msgstr ""

msgid ""
"The numeric constant for the BZIP2 compression method.  This requires the :"
"mod:`bz2` module."
msgstr ""

msgid ""
"The numeric constant for the LZMA compression method.  This requires the :"
"mod:`lzma` module."
msgstr ""

msgid ""
"The ZIP file format specification has included support for bzip2 compression "
"since 2001, and for LZMA compression since 2006. However, some tools "
"(including older Python releases) do not support these compression methods, "
"and may either refuse to process the ZIP file altogether, or fail to extract "
"individual files."
msgstr ""

msgid "`PKZIP Application Note`_"
msgstr ""

msgid ""
"Documentation on the ZIP file format by Phil Katz, the creator of the format "
"and algorithms used."
msgstr ""

msgid "`Info-ZIP Home Page <http://www.info-zip.org/>`_"
msgstr ""

msgid ""
"Information about the Info-ZIP project's ZIP archive programs and "
"development libraries."
msgstr ""

msgid "ZipFile Objects"
msgstr ""

msgid ""
"Open a ZIP file, where *file* can be a path to a file (a string), a file-"
"like object or a :term:`path-like object`."
msgstr ""

msgid ""
"The *mode* parameter should be ``'r'`` to read an existing file, ``'w'`` to "
"truncate and write a new file, ``'a'`` to append to an existing file, or "
"``'x'`` to exclusively create and write a new file. If *mode* is ``'x'`` and "
"*file* refers to an existing file, a :exc:`FileExistsError` will be raised. "
"If *mode* is ``'a'`` and *file* refers to an existing ZIP file, then "
"additional files are added to it.  If *file* does not refer to a ZIP file, "
"then a new ZIP archive is appended to the file.  This is meant for adding a "
"ZIP archive to another file (such as :file:`python.exe`).  If *mode* is "
"``'a'`` and the file does not exist at all, it is created. If *mode* is "
"``'r'`` or ``'a'``, the file should be seekable."
msgstr ""

msgid ""
"*compression* is the ZIP compression method to use when writing the archive, "
"and should be :const:`ZIP_STORED`, :const:`ZIP_DEFLATED`, :const:`ZIP_BZIP2` "
"or :const:`ZIP_LZMA`; unrecognized values will cause :exc:"
"`NotImplementedError` to be raised.  If :const:`ZIP_DEFLATED`, :const:"
"`ZIP_BZIP2` or :const:`ZIP_LZMA` is specified but the corresponding module (:"
"mod:`zlib`, :mod:`bz2` or :mod:`lzma`) is not available, :exc:`RuntimeError` "
"is raised. The default is :const:`ZIP_STORED`."
msgstr ""

msgid ""
"If *allowZip64* is ``True`` (the default) zipfile will create ZIP files that "
"use the ZIP64 extensions when the zipfile is larger than 4 GiB. If it is "
"``false`` :mod:`zipfile` will raise an exception when the ZIP file would "
"require ZIP64 extensions."
msgstr ""

msgid ""
"The *compresslevel* parameter controls the compression level to use when "
"writing files to the archive. When using :const:`ZIP_STORED` or :const:"
"`ZIP_LZMA` it has no effect. When using :const:`ZIP_DEFLATED` integers ``0`` "
"through ``9`` are accepted (see :class:`zlib <zlib.compressobj>` for more "
"information). When using :const:`ZIP_BZIP2` integers ``1`` through ``9`` are "
"accepted (see :class:`bz2 <bz2.BZ2File>` for more information)."
msgstr ""

msgid ""
"The *strict_timestamps* argument, when set to ``False``, allows to zip files "
"older than 1980-01-01 at the cost of setting the timestamp to 1980-01-01. "
"Similar behavior occurs with files newer than 2107-12-31, the timestamp is "
"also set to the limit."
msgstr ""

msgid ""
"When mode is ``'r'``, *metadata_encoding* may be set to the name of a codec, "
"which will be used to decode metadata such as the names of members and ZIP "
"comments."
msgstr ""

msgid ""
"If the file is created with mode ``'w'``, ``'x'`` or ``'a'`` and then :meth:"
"`closed <close>` without adding any files to the archive, the appropriate "
"ZIP structures for an empty archive will be written to the file."
msgstr ""

msgid ""
"ZipFile is also a context manager and therefore supports the :keyword:`with` "
"statement.  In the example, *myzip* is closed after the :keyword:`!with` "
"statement's suite is finished---even if an exception occurs::"
msgstr ""

msgid ""
"*metadata_encoding* is an instance-wide setting for the ZipFile. It is not "
"currently possible to set this on a per-member basis."
msgstr ""

msgid ""
"This attribute is a workaround for legacy implementations which produce "
"archives with names in the current locale encoding or code page (mostly on "
"Windows).  According to the .ZIP standard, the encoding of metadata may be "
"specified to be either IBM code page (default) or UTF-8 by a flag in the "
"archive header. That flag takes precedence over *metadata_encoding*, which "
"is a Python-specific extension."
msgstr ""

msgid "Added the ability to use :class:`ZipFile` as a context manager."
msgstr ""

msgid "Added support for :mod:`bzip2 <bz2>` and :mod:`lzma` compression."
msgstr ""

msgid "ZIP64 extensions are enabled by default."
msgstr ""

msgid ""
"Added support for writing to unseekable streams. Added support for the "
"``'x'`` mode."
msgstr ""

msgid ""
"Previously, a plain :exc:`RuntimeError` was raised for unrecognized "
"compression values."
msgstr ""

msgid "The *file* parameter accepts a :term:`path-like object`."
msgstr ""

msgid "Add the *compresslevel* parameter."
msgstr ""

msgid "The *strict_timestamps* keyword-only argument"
msgstr ""

msgid ""
"Added support for specifying member name encoding for reading metadata in "
"the zipfile's directory and file headers."
msgstr ""

msgid ""
"Close the archive file.  You must call :meth:`close` before exiting your "
"program or essential records will not be written."
msgstr ""

msgid ""
"Return a :class:`ZipInfo` object with information about the archive member "
"*name*.  Calling :meth:`getinfo` for a name not currently contained in the "
"archive will raise a :exc:`KeyError`."
msgstr ""

msgid ""
"Return a list containing a :class:`ZipInfo` object for each member of the "
"archive.  The objects are in the same order as their entries in the actual "
"ZIP file on disk if an existing archive was opened."
msgstr ""

msgid "Return a list of archive members by name."
msgstr ""

msgid ""
"Access a member of the archive as a binary file-like object.  *name* can be "
"either the name of a file within the archive or a :class:`ZipInfo` object.  "
"The *mode* parameter, if included, must be ``'r'`` (the default) or "
"``'w'``.  *pwd* is the password used to decrypt encrypted ZIP files as a :"
"class:`bytes` object."
msgstr ""

msgid ""
":meth:`~ZipFile.open` is also a context manager and therefore supports the :"
"keyword:`with` statement::"
msgstr ""

msgid ""
"With *mode* ``'r'`` the file-like object (``ZipExtFile``) is read-only and "
"provides the following methods: :meth:`~io.BufferedIOBase.read`, :meth:`~io."
"IOBase.readline`, :meth:`~io.IOBase.readlines`, :meth:`~io.IOBase.seek`, :"
"meth:`~io.IOBase.tell`, :meth:`~container.__iter__`, :meth:`~iterator."
"__next__`. These objects can operate independently of the ZipFile."
msgstr ""

msgid ""
"With ``mode='w'``, a writable file handle is returned, which supports the :"
"meth:`~io.BufferedIOBase.write` method.  While a writable file handle is "
"open, attempting to read or write other files in the ZIP file will raise a :"
"exc:`ValueError`."
msgstr ""

msgid ""
"When writing a file, if the file size is not known in advance but may exceed "
"2 GiB, pass ``force_zip64=True`` to ensure that the header format is capable "
"of supporting large files.  If the file size is known in advance, construct "
"a :class:`ZipInfo` object with :attr:`~ZipInfo.file_size` set, and use that "
"as the *name* parameter."
msgstr ""

msgid ""
"The :meth:`.open`, :meth:`read` and :meth:`extract` methods can take a "
"filename or a :class:`ZipInfo` object.  You will appreciate this when trying "
"to read a ZIP file that contains members with duplicate names."
msgstr ""

msgid ""
"Removed support of ``mode='U'``.  Use :class:`io.TextIOWrapper` for reading "
"compressed text files in :term:`universal newlines` mode."
msgstr ""

msgid ""
":meth:`ZipFile.open` can now be used to write files into the archive with "
"the ``mode='w'`` option."
msgstr ""

msgid ""
"Calling :meth:`.open` on a closed ZipFile will raise a :exc:`ValueError`. "
"Previously, a :exc:`RuntimeError` was raised."
msgstr ""

msgid ""
"Extract a member from the archive to the current working directory; *member* "
"must be its full name or a :class:`ZipInfo` object.  Its file information is "
"extracted as accurately as possible.  *path* specifies a different directory "
"to extract to.  *member* can be a filename or a :class:`ZipInfo` object. "
"*pwd* is the password used for encrypted files as a :class:`bytes` object."
msgstr ""

msgid "Returns the normalized path created (a directory or new file)."
msgstr ""

msgid ""
"If a member filename is an absolute path, a drive/UNC sharepoint and leading "
"(back)slashes will be stripped, e.g.: ``///foo/bar`` becomes ``foo/bar`` on "
"Unix, and ``C:\\foo\\bar`` becomes ``foo\\bar`` on Windows. And all ``\".."
"\"`` components in a member filename will be removed, e.g.: ``../../foo../../"
"ba..r`` becomes ``foo../ba..r``.  On Windows illegal characters (``:``, "
"``<``, ``>``, ``|``, ``\"``, ``?``, and ``*``) replaced by underscore "
"(``_``)."
msgstr ""

msgid ""
"Calling :meth:`extract` on a closed ZipFile will raise a :exc:`ValueError`.  "
"Previously, a :exc:`RuntimeError` was raised."
msgstr ""

msgid "The *path* parameter accepts a :term:`path-like object`."
msgstr ""

msgid ""
"Extract all members from the archive to the current working directory.  "
"*path* specifies a different directory to extract to.  *members* is optional "
"and must be a subset of the list returned by :meth:`namelist`.  *pwd* is the "
"password used for encrypted files as a :class:`bytes` object."
msgstr ""

msgid ""
"Never extract archives from untrusted sources without prior inspection. It "
"is possible that files are created outside of *path*, e.g. members that have "
"absolute filenames starting with ``\"/\"`` or filenames with two dots ``\".."
"\"``.  This module attempts to prevent that. See :meth:`extract` note."
msgstr ""

msgid ""
"Calling :meth:`extractall` on a closed ZipFile will raise a :exc:"
"`ValueError`.  Previously, a :exc:`RuntimeError` was raised."
msgstr ""

msgid "Print a table of contents for the archive to ``sys.stdout``."
msgstr ""

msgid ""
"Set *pwd* (a :class:`bytes` object) as default password to extract encrypted "
"files."
msgstr ""

msgid ""
"Return the bytes of the file *name* in the archive.  *name* is the name of "
"the file in the archive, or a :class:`ZipInfo` object.  The archive must be "
"open for read or append. *pwd* is the password used for encrypted files as "
"a :class:`bytes` object and, if specified, overrides the default password "
"set with :meth:`setpassword`. Calling :meth:`read` on a ZipFile that uses a "
"compression method other than :const:`ZIP_STORED`, :const:`ZIP_DEFLATED`, :"
"const:`ZIP_BZIP2` or :const:`ZIP_LZMA` will raise a :exc:"
"`NotImplementedError`. An error will also be raised if the corresponding "
"compression module is not available."
msgstr ""

msgid ""
"Calling :meth:`read` on a closed ZipFile will raise a :exc:`ValueError`. "
"Previously, a :exc:`RuntimeError` was raised."
msgstr ""

msgid ""
"Read all the files in the archive and check their CRC's and file headers. "
"Return the name of the first bad file, or else return ``None``."
msgstr ""

msgid ""
"Calling :meth:`testzip` on a closed ZipFile will raise a :exc:`ValueError`.  "
"Previously, a :exc:`RuntimeError` was raised."
msgstr ""

msgid ""
"Write the file named *filename* to the archive, giving it the archive name "
"*arcname* (by default, this will be the same as *filename*, but without a "
"drive letter and with leading path separators removed).  If given, "
"*compress_type* overrides the value given for the *compression* parameter to "
"the constructor for the new entry. Similarly, *compresslevel* will override "
"the constructor if given. The archive must be open with mode ``'w'``, "
"``'x'`` or ``'a'``."
msgstr ""

msgid ""
"The ZIP file standard historically did not specify a metadata encoding, but "
"strongly recommended CP437 (the original IBM PC encoding) for "
"interoperability.  Recent versions allow use of UTF-8 (only).  In this "
"module, UTF-8 will automatically be used to write the member names if they "
"contain any non-ASCII characters.  It is not possible to write member names "
"in any encoding other than ASCII or UTF-8."
msgstr ""

msgid ""
"Archive names should be relative to the archive root, that is, they should "
"not start with a path separator."
msgstr ""

msgid ""
"If ``arcname`` (or ``filename``, if ``arcname`` is  not given) contains a "
"null byte, the name of the file in the archive will be truncated at the null "
"byte."
msgstr ""

msgid ""
"A leading slash in the filename may lead to the archive being impossible to "
"open in some zip programs on Windows systems."
msgstr ""

msgid ""
"Calling :meth:`write` on a ZipFile created with mode ``'r'`` or a closed "
"ZipFile will raise a :exc:`ValueError`.  Previously, a :exc:`RuntimeError` "
"was raised."
msgstr ""

msgid ""
"Write a file into the archive.  The contents is *data*, which may be either "
"a :class:`str` or a :class:`bytes` instance; if it is a :class:`str`, it is "
"encoded as UTF-8 first.  *zinfo_or_arcname* is either the file name it will "
"be given in the archive, or a :class:`ZipInfo` instance.  If it's an "
"instance, at least the filename, date, and time must be given.  If it's a "
"name, the date and time is set to the current date and time. The archive "
"must be opened with mode ``'w'``, ``'x'`` or ``'a'``."
msgstr ""

msgid ""
"If given, *compress_type* overrides the value given for the *compression* "
"parameter to the constructor for the new entry, or in the *zinfo_or_arcname* "
"(if that is a :class:`ZipInfo` instance). Similarly, *compresslevel* will "
"override the constructor if given."
msgstr ""

msgid ""
"When passing a :class:`ZipInfo` instance as the *zinfo_or_arcname* "
"parameter, the compression method used will be that specified in the "
"*compress_type* member of the given :class:`ZipInfo` instance.  By default, "
"the :class:`ZipInfo` constructor sets this member to :const:`ZIP_STORED`."
msgstr ""

msgid "The *compress_type* argument."
msgstr ""

msgid ""
"Calling :meth:`writestr` on a ZipFile created with mode ``'r'`` or a closed "
"ZipFile will raise a :exc:`ValueError`.  Previously, a :exc:`RuntimeError` "
"was raised."
msgstr ""

msgid ""
"Create a directory inside the archive.  If *zinfo_or_directory* is a string, "
"a directory is created inside the archive with the mode that is specified in "
"the *mode* argument. If, however, *zinfo_or_directory* is a :class:`ZipInfo` "
"instance then the *mode* argument is ignored."
msgstr ""

msgid "The archive must be opened with mode ``'w'``, ``'x'`` or ``'a'``."
msgstr ""

msgid "The following data attributes are also available:"
msgstr ""

msgid "Name of the ZIP file."
msgstr ""

msgid ""
"The level of debug output to use.  This may be set from ``0`` (the default, "
"no output) to ``3`` (the most output).  Debugging information is written to "
"``sys.stdout``."
msgstr ""

msgid ""
"The comment associated with the ZIP file as a :class:`bytes` object. If "
"assigning a comment to a :class:`ZipFile` instance created with mode "
"``'w'``, ``'x'`` or ``'a'``, it should be no longer than 65535 bytes.  "
"Comments longer than this will be truncated."
msgstr ""

msgid "Path Objects"
msgstr ""

msgid ""
"Construct a Path object from a ``root`` zipfile (which may be a :class:"
"`ZipFile` instance or ``file`` suitable for passing to the :class:`ZipFile` "
"constructor)."
msgstr ""

msgid ""
"``at`` specifies the location of this Path within the zipfile, e.g. 'dir/"
"file.txt', 'dir/', or ''. Defaults to the empty string, indicating the root."
msgstr ""

msgid ""
"Path objects expose the following features of :mod:`pathlib.Path` objects:"
msgstr ""

msgid "Path objects are traversable using the ``/`` operator or ``joinpath``."
msgstr ""

msgid "The final path component."
msgstr ""

msgid ""
"Invoke :meth:`ZipFile.open` on the current path. Allows opening for read or "
"write, text or binary through supported modes: 'r', 'w', 'rb', 'wb'. "
"Positional and keyword arguments are passed through to :class:`io."
"TextIOWrapper` when opened as text and ignored otherwise. ``pwd`` is the "
"``pwd`` parameter to :meth:`ZipFile.open`."
msgstr ""

msgid ""
"Added support for text and binary modes for open. Default mode is now text."
msgstr ""

msgid ""
"The ``encoding`` parameter can be supplied as a positional argument without "
"causing a :exc:`TypeError`. As it could in 3.9. Code needing to be "
"compatible with unpatched 3.10 and 3.11 versions must pass all :class:`io."
"TextIOWrapper` arguments, ``encoding`` included, as keywords."
msgstr ""

msgid "Enumerate the children of the current directory."
msgstr ""

msgid "Return ``True`` if the current context references a directory."
msgstr ""

msgid "Return ``True`` if the current context references a file."
msgstr ""

msgid ""
"Return ``True`` if the current context references a file or directory in the "
"zip file."
msgstr ""

msgid "The file extension of the final component."
msgstr ""

msgid "Added :data:`Path.suffix` property."
msgstr ""

msgid "The final path component, without its suffix."
msgstr ""

msgid "Added :data:`Path.stem` property."
msgstr ""

msgid "A list of the path’s file extensions."
msgstr ""

msgid "Added :data:`Path.suffixes` property."
msgstr ""

msgid ""
"Read the current file as unicode text. Positional and keyword arguments are "
"passed through to :class:`io.TextIOWrapper` (except ``buffer``, which is "
"implied by the context)."
msgstr ""

msgid "Read the current file as bytes."
msgstr ""

msgid ""
"Return a new Path object with each of the *other* arguments joined. The "
"following are equivalent::"
msgstr ""

msgid ""
"Prior to 3.10, ``joinpath`` was undocumented and accepted exactly one "
"parameter."
msgstr ""

msgid ""
"The `zipp <https://pypi.org/project/zipp>`_ project provides backports of "
"the latest path object functionality to older Pythons. Use ``zipp.Path`` in "
"place of ``zipfile.Path`` for early access to changes."
msgstr ""

msgid "PyZipFile Objects"
msgstr ""

msgid ""
"The :class:`PyZipFile` constructor takes the same parameters as the :class:"
"`ZipFile` constructor, and one additional parameter, *optimize*."
msgstr ""

msgid "The *optimize* parameter."
msgstr ""

msgid ""
"Instances have one method in addition to those of :class:`ZipFile` objects:"
msgstr ""

msgid ""
"Search for files :file:`\\*.py` and add the corresponding file to the "
"archive."
msgstr ""

msgid ""
"If the *optimize* parameter to :class:`PyZipFile` was not given or ``-1``, "
"the corresponding file is a :file:`\\*.pyc` file, compiling if necessary."
msgstr ""

msgid ""
"If the *optimize* parameter to :class:`PyZipFile` was ``0``, ``1`` or ``2``, "
"only files with that optimization level (see :func:`compile`) are added to "
"the archive, compiling if necessary."
msgstr ""

msgid ""
"If *pathname* is a file, the filename must end with :file:`.py`, and just "
"the (corresponding :file:`\\*.pyc`) file is added at the top level (no path "
"information).  If *pathname* is a file that does not end with :file:`.py`, "
"a :exc:`RuntimeError` will be raised.  If it is a directory, and the "
"directory is not a package directory, then all the files :file:`\\*.pyc` are "
"added at the top level.  If the directory is a package directory, then all :"
"file:`\\*.pyc` are added under the package name as a file path, and if any "
"subdirectories are package directories, all of these are added recursively "
"in sorted order."
msgstr ""

msgid "*basename* is intended for internal use only."
msgstr ""

msgid ""
"*filterfunc*, if given, must be a function taking a single string argument.  "
"It will be passed each path (including each individual full file path) "
"before it is added to the archive.  If *filterfunc* returns a false value, "
"the path will not be added, and if it is a directory its contents will be "
"ignored.  For example, if our test files are all either in ``test`` "
"directories or start with the string ``test_``, we can use a *filterfunc* to "
"exclude them::"
msgstr ""

msgid "The :meth:`writepy` method makes archives with file names like this::"
msgstr ""

msgid "The *filterfunc* parameter."
msgstr ""

msgid "The *pathname* parameter accepts a :term:`path-like object`."
msgstr ""

msgid "Recursion sorts directory entries."
msgstr ""

msgid "ZipInfo Objects"
msgstr ""

msgid ""
"Instances of the :class:`ZipInfo` class are returned by the :meth:`.getinfo` "
"and :meth:`.infolist` methods of :class:`ZipFile` objects.  Each object "
"stores information about a single member of the ZIP archive."
msgstr ""

msgid ""
"There is one classmethod to make a :class:`ZipInfo` instance for a "
"filesystem file:"
msgstr ""

msgid ""
"Construct a :class:`ZipInfo` instance for a file on the filesystem, in "
"preparation for adding it to a zip file."
msgstr ""

msgid "*filename* should be the path to a file or directory on the filesystem."
msgstr ""

msgid ""
"If *arcname* is specified, it is used as the name within the archive. If "
"*arcname* is not specified, the name will be the same as *filename*, but "
"with any drive letter and leading path separators removed."
msgstr ""

msgid "The *filename* parameter accepts a :term:`path-like object`."
msgstr ""

msgid "Instances have the following methods and attributes:"
msgstr ""

msgid "Return ``True`` if this archive member is a directory."
msgstr ""

msgid "This uses the entry's name: directories should always end with ``/``."
msgstr ""

msgid "Name of the file in the archive."
msgstr ""

msgid ""
"The time and date of the last modification to the archive member.  This is a "
"tuple of six values:"
msgstr ""

msgid "Index"
msgstr ""

msgid "Value"
msgstr "Wartość"

msgid "``0``"
msgstr ""

msgid "Year (>= 1980)"
msgstr ""

msgid "``1``"
msgstr ""

msgid "Month (one-based)"
msgstr ""

msgid "``2``"
msgstr ""

msgid "Day of month (one-based)"
msgstr ""

msgid "``3``"
msgstr ""

msgid "Hours (zero-based)"
msgstr ""

msgid "``4``"
msgstr ""

msgid "Minutes (zero-based)"
msgstr ""

msgid "``5``"
msgstr ""

msgid "Seconds (zero-based)"
msgstr ""

msgid "The ZIP file format does not support timestamps before 1980."
msgstr ""

msgid "Type of compression for the archive member."
msgstr ""

msgid "Comment for the individual archive member as a :class:`bytes` object."
msgstr ""

msgid ""
"Expansion field data.  The `PKZIP Application Note`_ contains some comments "
"on the internal structure of the data contained in this :class:`bytes` "
"object."
msgstr ""

msgid "System which created ZIP archive."
msgstr ""

msgid "PKZIP version which created ZIP archive."
msgstr ""

msgid "PKZIP version needed to extract archive."
msgstr ""

msgid "Must be zero."
msgstr ""

msgid "ZIP flag bits."
msgstr ""

msgid "Volume number of file header."
msgstr ""

msgid "Internal attributes."
msgstr ""

msgid "External file attributes."
msgstr ""

msgid "Byte offset to the file header."
msgstr ""

msgid "CRC-32 of the uncompressed file."
msgstr ""

msgid "Size of the compressed data."
msgstr ""

msgid "Size of the uncompressed file."
msgstr ""

msgid "Command-Line Interface"
msgstr ""

msgid ""
"The :mod:`zipfile` module provides a simple command-line interface to "
"interact with ZIP archives."
msgstr ""

msgid ""
"If you want to create a new ZIP archive, specify its name after the :option:"
"`-c` option and then list the filename(s) that should be included:"
msgstr ""

msgid "Passing a directory is also acceptable:"
msgstr ""

msgid ""
"If you want to extract a ZIP archive into the specified directory, use the :"
"option:`-e` option:"
msgstr ""

msgid "For a list of the files in a ZIP archive, use the :option:`-l` option:"
msgstr ""

msgid "Command-line options"
msgstr ""

msgid "List files in a zipfile."
msgstr ""

msgid "Create zipfile from source files."
msgstr ""

msgid "Extract zipfile into target directory."
msgstr ""

msgid "Test whether the zipfile is valid or not."
msgstr ""

msgid ""
"Specify encoding of member names for :option:`-l`, :option:`-e` and :option:"
"`-t`."
msgstr ""

msgid "Decompression pitfalls"
msgstr ""

msgid ""
"The extraction in zipfile module might fail due to some pitfalls listed "
"below."
msgstr ""

msgid "From file itself"
msgstr ""

msgid ""
"Decompression may fail due to incorrect password / CRC checksum / ZIP format "
"or unsupported compression method / decryption."
msgstr ""

msgid "File System limitations"
msgstr ""

msgid ""
"Exceeding limitations on different file systems can cause decompression "
"failed. Such as allowable characters in the directory entries, length of the "
"file name, length of the pathname, size of a single file, and number of "
"files, etc."
msgstr ""

msgid "Resources limitations"
msgstr ""

msgid ""
"The lack of memory or disk volume would lead to decompression failed. For "
"example, decompression bombs (aka `ZIP bomb`_) apply to zipfile library that "
"can cause disk volume exhaustion."
msgstr ""

msgid "Interruption"
msgstr ""

msgid ""
"Interruption during the decompression, such as pressing control-C or killing "
"the decompression process may result in incomplete decompression of the "
"archive."
msgstr ""

msgid "Default behaviors of extraction"
msgstr ""

msgid ""
"Not knowing the default extraction behaviors can cause unexpected "
"decompression results. For example, when extracting the same archive twice, "
"it overwrites files without asking."
msgstr ""
