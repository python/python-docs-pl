# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Maciej Olko <maciej.olko@gmail.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-24 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:14+0000\n"
"Last-Translator: Maciej Olko <maciej.olko@gmail.com>, 2021\n"
"Language-Team: Polish (https://www.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid ":mod:`syslog` --- Unix syslog library routines"
msgstr ""

msgid ""
"This module provides an interface to the Unix ``syslog`` library routines. "
"Refer to the Unix manual pages for a detailed description of the ``syslog`` "
"facility."
msgstr ""

msgid ""
"This module wraps the system ``syslog`` family of routines.  A pure Python "
"library that can speak to a syslog server is available in the :mod:`logging."
"handlers` module as :class:`SysLogHandler`."
msgstr ""

msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ""

msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""

msgid "The module defines the following functions:"
msgstr ""

msgid ""
"Send the string *message* to the system logger.  A trailing newline is added "
"if necessary.  Each message is tagged with a priority composed of a "
"*facility* and a *level*.  The optional *priority* argument, which defaults "
"to :const:`LOG_INFO`, determines the message priority.  If the facility is "
"not encoded in *priority* using logical-or (``LOG_INFO | LOG_USER``), the "
"value given in the :func:`openlog` call is used."
msgstr ""

msgid ""
"If :func:`openlog` has not been called prior to the call to :func:`syslog`, :"
"func:`openlog` will be called with no arguments."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.syslog`` with arguments "
"``priority``, ``message``."
msgstr ""

msgid ""
"In previous versions, :func:`openlog` would not be called automatically if "
"it wasn't called prior to the call to :func:`syslog`, deferring to the "
"syslog implementation to call ``openlog()``."
msgstr ""

msgid ""
"Logging options of subsequent :func:`syslog` calls can be set by calling :"
"func:`openlog`.  :func:`syslog` will call :func:`openlog` with no arguments "
"if the log is not currently open."
msgstr ""

msgid ""
"The optional *ident* keyword argument is a string which is prepended to "
"every message, and defaults to ``sys.argv[0]`` with leading path components "
"stripped.  The optional *logoption* keyword argument (default is 0) is a bit "
"field -- see below for possible values to combine.  The optional *facility* "
"keyword argument (default is :const:`LOG_USER`) sets the default facility "
"for messages which do not have a facility explicitly encoded."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.openlog`` with arguments "
"``ident``, ``logoption``, ``facility``."
msgstr ""

msgid ""
"In previous versions, keyword arguments were not allowed, and *ident* was "
"required."
msgstr ""

msgid ""
"Reset the syslog module values and call the system library ``closelog()``."
msgstr ""

msgid ""
"This causes the module to behave as it does when initially imported.  For "
"example, :func:`openlog` will be called on the first :func:`syslog` call "
"(if :func:`openlog` hasn't already been called), and *ident* and other :func:"
"`openlog` parameters are reset to defaults."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.closelog`` with no "
"arguments."
msgstr ""

msgid ""
"Set the priority mask to *maskpri* and return the previous mask value.  "
"Calls to :func:`syslog` with a priority level not set in *maskpri* are "
"ignored. The default is to log all priorities.  The function "
"``LOG_MASK(pri)`` calculates the mask for the individual priority *pri*.  "
"The function ``LOG_UPTO(pri)`` calculates the mask for all priorities up to "
"and including *pri*."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``syslog.setlogmask`` with "
"argument ``maskpri``."
msgstr ""

msgid "The module defines the following constants:"
msgstr ""

msgid "Priority levels (high to low):"
msgstr ""

msgid ""
":const:`LOG_EMERG`, :const:`LOG_ALERT`, :const:`LOG_CRIT`, :const:"
"`LOG_ERR`, :const:`LOG_WARNING`, :const:`LOG_NOTICE`, :const:`LOG_INFO`, :"
"const:`LOG_DEBUG`."
msgstr ""

msgid "Facilities:"
msgstr ""

msgid ""
":const:`LOG_KERN`, :const:`LOG_USER`, :const:`LOG_MAIL`, :const:"
"`LOG_DAEMON`, :const:`LOG_AUTH`, :const:`LOG_LPR`, :const:`LOG_NEWS`, :const:"
"`LOG_UUCP`, :const:`LOG_CRON`, :const:`LOG_SYSLOG`, :const:`LOG_LOCAL0` to :"
"const:`LOG_LOCAL7`, and, if defined in ``<syslog.h>``, :const:`LOG_AUTHPRIV`."
msgstr ""

msgid "Log options:"
msgstr ""

msgid ""
":const:`LOG_PID`, :const:`LOG_CONS`, :const:`LOG_NDELAY`, and, if defined in "
"``<syslog.h>``, :const:`LOG_ODELAY`, :const:`LOG_NOWAIT`, and :const:"
"`LOG_PERROR`."
msgstr ""

msgid "Examples"
msgstr "Przyk≈Çady"

msgid "Simple example"
msgstr ""

msgid "A simple set of examples::"
msgstr ""

msgid ""
"An example of setting some log options, these would include the process ID "
"in logged messages, and write the messages to the destination facility used "
"for mail logging::"
msgstr ""
