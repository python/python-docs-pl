# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Maciej Olko <maciej.olko@gmail.com>, 2021
# Michał Biliński <m.bilinskimichal@gmail.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-24 14:14+0000\n"
"PO-Revision-Date: 2021-06-28 01:17+0000\n"
"Last-Translator: Michał Biliński <m.bilinskimichal@gmail.com>, 2021\n"
"Language-Team: Polish (https://www.transifex.com/python-doc/teams/5390/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

msgid ":mod:`winreg` --- Windows registry access"
msgstr ""

msgid ""
"These functions expose the Windows registry API to Python.  Instead of using "
"an integer as the registry handle, a :ref:`handle object <handle-object>` is "
"used to ensure that the handles are closed correctly, even if the programmer "
"neglects to explicitly close them."
msgstr ""

msgid ""
"Several functions in this module used to raise a :exc:`WindowsError`, which "
"is now an alias of :exc:`OSError`."
msgstr ""

msgid "Functions"
msgstr "Zadania"

msgid "This module offers the following functions:"
msgstr ""

msgid ""
"Closes a previously opened registry key.  The *hkey* argument specifies a "
"previously opened key."
msgstr ""

msgid ""
"If *hkey* is not closed using this method (or via :meth:`hkey.Close() "
"<PyHKEY.Close>`), it is closed when the *hkey* object is destroyed by Python."
msgstr ""

msgid ""
"Establishes a connection to a predefined registry handle on another "
"computer, and returns a :ref:`handle object <handle-object>`."
msgstr ""

msgid ""
"*computer_name* is the name of the remote computer, of the form ``r\"\\"
"\\computername\"``.  If ``None``, the local computer is used."
msgstr ""

msgid "*key* is the predefined handle to connect to."
msgstr ""

msgid ""
"The return value is the handle of the opened key. If the function fails, an :"
"exc:`OSError` exception is raised."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.ConnectRegistry`` with "
"arguments ``computer_name``, ``key``."
msgstr ""

msgid "See :ref:`above <exception-changed>`."
msgstr ""

msgid ""
"Creates or opens the specified key, returning a :ref:`handle object <handle-"
"object>`."
msgstr ""

msgid ""
"*key* is an already open key, or one of the predefined :ref:`HKEY_* "
"constants <hkey-constants>`."
msgstr ""

msgid "*sub_key* is a string that names the key this method opens or creates."
msgstr ""

msgid ""
"If *key* is one of the predefined keys, *sub_key* may be ``None``. In that "
"case, the handle returned is the same key handle passed in to the function."
msgstr ""

msgid "If the key already exists, this function opens the existing key."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.CreateKey`` with "
"arguments ``key``, ``sub_key``, ``access``."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.OpenKey/result`` with "
"argument ``key``."
msgstr ""

msgid ""
"*reserved* is a reserved integer, and must be zero. The default is zero."
msgstr ""

msgid ""
"*access* is an integer that specifies an access mask that describes the "
"desired security access for the key.  Default is :const:`KEY_WRITE`.  See :"
"ref:`Access Rights <access-rights>` for other allowed values."
msgstr ""

msgid "Deletes the specified key."
msgstr ""

msgid ""
"*sub_key* is a string that must be a subkey of the key identified by the "
"*key* parameter.  This value must not be ``None``, and the key may not have "
"subkeys."
msgstr ""

msgid "*This method can not delete keys with subkeys.*"
msgstr ""

msgid ""
"If the method succeeds, the entire key, including all of its values, is "
"removed. If the method fails, an :exc:`OSError` exception is raised."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.DeleteKey`` with "
"arguments ``key``, ``sub_key``, ``access``."
msgstr ""

msgid ""
"*sub_key* is a string that must be a subkey of the key identified by the "
"*key* parameter. This value must not be ``None``, and the key may not have "
"subkeys."
msgstr ""

msgid ""
"*access* is an integer that specifies an access mask that describes the "
"desired security access for the key.  Default is :const:`KEY_WOW64_64KEY`. "
"On 32-bit Windows, the WOW64 constants are ignored. See :ref:`Access Rights "
"<access-rights>` for other allowed values."
msgstr ""

msgid "On unsupported Windows versions, :exc:`NotImplementedError` is raised."
msgstr ""

msgid "Removes a named value from a registry key."
msgstr ""

msgid "*value* is a string that identifies the value to remove."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.DeleteValue`` with "
"arguments ``key``, ``value``."
msgstr ""

msgid "Enumerates subkeys of an open registry key, returning a string."
msgstr ""

msgid "*index* is an integer that identifies the index of the key to retrieve."
msgstr ""

msgid ""
"The function retrieves the name of one subkey each time it is called.  It is "
"typically called repeatedly until an :exc:`OSError` exception is raised, "
"indicating, no more values are available."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.EnumKey`` with arguments "
"``key``, ``index``."
msgstr ""

msgid "Enumerates values of an open registry key, returning a tuple."
msgstr ""

msgid ""
"*index* is an integer that identifies the index of the value to retrieve."
msgstr ""

msgid ""
"The function retrieves the name of one subkey each time it is called. It is "
"typically called repeatedly, until an :exc:`OSError` exception is raised, "
"indicating no more values."
msgstr ""

msgid "The result is a tuple of 3 items:"
msgstr ""

msgid "Index"
msgstr ""

msgid "Meaning"
msgstr "Znaczenie"

msgid "``0``"
msgstr ""

msgid "A string that identifies the value name"
msgstr ""

msgid "``1``"
msgstr ""

msgid ""
"An object that holds the value data, and whose type depends on the "
"underlying registry type"
msgstr ""

msgid "``2``"
msgstr ""

msgid ""
"An integer that identifies the type of the value data (see table in docs "
"for :meth:`SetValueEx`)"
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.EnumValue`` with "
"arguments ``key``, ``index``."
msgstr ""

msgid ""
"Expands environment variable placeholders ``%NAME%`` in strings like :const:"
"`REG_EXPAND_SZ`::"
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg."
"ExpandEnvironmentStrings`` with argument ``str``."
msgstr ""

msgid "Writes all the attributes of a key to the registry."
msgstr ""

msgid ""
"It is not necessary to call :func:`FlushKey` to change a key. Registry "
"changes are flushed to disk by the registry using its lazy flusher.  "
"Registry changes are also flushed to disk at system shutdown.  Unlike :func:"
"`CloseKey`, the :func:`FlushKey` method returns only when all the data has "
"been written to the registry. An application should only call :func:"
"`FlushKey` if it requires absolute certainty that registry changes are on "
"disk."
msgstr ""

msgid ""
"If you don't know whether a :func:`FlushKey` call is required, it probably "
"isn't."
msgstr ""

msgid ""
"Creates a subkey under the specified key and stores registration information "
"from a specified file into that subkey."
msgstr ""

msgid ""
"*key* is a handle returned by :func:`ConnectRegistry` or one of the "
"constants :const:`HKEY_USERS` or :const:`HKEY_LOCAL_MACHINE`."
msgstr ""

msgid "*sub_key* is a string that identifies the subkey to load."
msgstr ""

msgid ""
"*file_name* is the name of the file to load registry data from. This file "
"must have been created with the :func:`SaveKey` function. Under the file "
"allocation table (FAT) file system, the filename may not have an extension."
msgstr ""

msgid ""
"A call to :func:`LoadKey` fails if the calling process does not have the :"
"const:`SE_RESTORE_PRIVILEGE` privilege.  Note that privileges are different "
"from permissions -- see the `RegLoadKey documentation <https://msdn."
"microsoft.com/en-us/library/ms724889%28v=VS.85%29.aspx>`__ for more details."
msgstr ""

msgid ""
"If *key* is a handle returned by :func:`ConnectRegistry`, then the path "
"specified in *file_name* is relative to the remote computer."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.LoadKey`` with arguments "
"``key``, ``sub_key``, ``file_name``."
msgstr ""

msgid ""
"Opens the specified key, returning a :ref:`handle object <handle-object>`."
msgstr ""

msgid "*sub_key* is a string that identifies the sub_key to open."
msgstr ""

msgid ""
"*reserved* is a reserved integer, and must be zero.  The default is zero."
msgstr ""

msgid ""
"*access* is an integer that specifies an access mask that describes the "
"desired security access for the key.  Default is :const:`KEY_READ`.  See :"
"ref:`Access Rights <access-rights>` for other allowed values."
msgstr ""

msgid "The result is a new handle to the specified key."
msgstr ""

msgid "If the function fails, :exc:`OSError` is raised."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.OpenKey`` with arguments "
"``key``, ``sub_key``, ``access``."
msgstr ""

msgid "Allow the use of named arguments."
msgstr ""

msgid "Returns information about a key, as a tuple."
msgstr ""

msgid "An integer giving the number of sub keys this key has."
msgstr ""

msgid "An integer giving the number of values this key has."
msgstr ""

msgid ""
"An integer giving when the key was last modified (if available) as 100's of "
"nanoseconds since Jan 1, 1601."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.QueryInfoKey`` with "
"argument ``key``."
msgstr ""

msgid "Retrieves the unnamed value for a key, as a string."
msgstr ""

msgid ""
"*sub_key* is a string that holds the name of the subkey with which the value "
"is associated.  If this parameter is ``None`` or empty, the function "
"retrieves the value set by the :func:`SetValue` method for the key "
"identified by *key*."
msgstr ""

msgid ""
"Values in the registry have name, type, and data components. This method "
"retrieves the data for a key's first value that has a ``NULL`` name. But the "
"underlying API call doesn't return the type, so always use :func:"
"`QueryValueEx` if possible."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.QueryValue`` with "
"arguments ``key``, ``sub_key``, ``value_name``."
msgstr ""

msgid ""
"Retrieves the type and data for a specified value name associated with an "
"open registry key."
msgstr ""

msgid "*value_name* is a string indicating the value to query."
msgstr ""

msgid "The result is a tuple of 2 items:"
msgstr ""

msgid "The value of the registry item."
msgstr ""

msgid ""
"An integer giving the registry type for this value (see table in docs for :"
"meth:`SetValueEx`)"
msgstr ""

msgid "Saves the specified key, and all its subkeys to the specified file."
msgstr ""

msgid ""
"*file_name* is the name of the file to save registry data to.  This file "
"cannot already exist. If this filename includes an extension, it cannot be "
"used on file allocation table (FAT) file systems by the :meth:`LoadKey` "
"method."
msgstr ""

msgid ""
"If *key* represents a key on a remote computer, the path described by "
"*file_name* is relative to the remote computer. The caller of this method "
"must possess the :const:`SeBackupPrivilege` security privilege.  Note that "
"privileges are different than permissions -- see the `Conflicts Between User "
"Rights and Permissions documentation <https://msdn.microsoft.com/en-us/"
"library/ms724878%28v=VS.85%29.aspx>`__ for more details."
msgstr ""

msgid "This function passes ``NULL`` for *security_attributes* to the API."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.SaveKey`` with arguments "
"``key``, ``file_name``."
msgstr ""

msgid "Associates a value with a specified key."
msgstr ""

msgid ""
"*sub_key* is a string that names the subkey with which the value is "
"associated."
msgstr ""

msgid ""
"*type* is an integer that specifies the type of the data. Currently this "
"must be :const:`REG_SZ`, meaning only strings are supported.  Use the :func:"
"`SetValueEx` function for support for other data types."
msgstr ""

msgid "*value* is a string that specifies the new value."
msgstr ""

msgid ""
"If the key specified by the *sub_key* parameter does not exist, the SetValue "
"function creates it."
msgstr ""

msgid ""
"Value lengths are limited by available memory. Long values (more than 2048 "
"bytes) should be stored as files with the filenames stored in the "
"configuration registry.  This helps the registry perform efficiently."
msgstr ""

msgid ""
"The key identified by the *key* parameter must have been opened with :const:"
"`KEY_SET_VALUE` access."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.SetValue`` with "
"arguments ``key``, ``sub_key``, ``type``, ``value``."
msgstr ""

msgid "Stores data in the value field of an open registry key."
msgstr ""

msgid ""
"*value_name* is a string that names the subkey with which the value is "
"associated."
msgstr ""

msgid "*reserved* can be anything -- zero is always passed to the API."
msgstr ""

msgid ""
"*type* is an integer that specifies the type of the data. See :ref:`Value "
"Types <value-types>` for the available types."
msgstr ""

msgid ""
"This method can also set additional value and type information for the "
"specified key.  The key identified by the key parameter must have been "
"opened with :const:`KEY_SET_VALUE` access."
msgstr ""

msgid "To open the key, use the :func:`CreateKey` or :func:`OpenKey` methods."
msgstr ""

msgid ""
"Disables registry reflection for 32-bit processes running on a 64-bit "
"operating system."
msgstr ""

msgid ""
"Will generally raise :exc:`NotImplementedError` if executed on a 32-bit "
"operating system."
msgstr ""

msgid ""
"If the key is not on the reflection list, the function succeeds but has no "
"effect.  Disabling reflection for a key does not affect reflection of any "
"subkeys."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.DisableReflectionKey`` "
"with argument ``key``."
msgstr ""

msgid "Restores registry reflection for the specified disabled key."
msgstr ""

msgid ""
"Restoring reflection for a key does not affect reflection of any subkeys."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.EnableReflectionKey`` "
"with argument ``key``."
msgstr ""

msgid "Determines the reflection state for the specified key."
msgstr ""

msgid "Returns ``True`` if reflection is disabled."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.QueryReflectionKey`` "
"with argument ``key``."
msgstr ""

msgid "Constants"
msgstr "Stały"

msgid ""
"The following constants are defined for use in many :mod:`_winreg` functions."
msgstr ""

msgid "HKEY_* Constants"
msgstr ""

msgid ""
"Registry entries subordinate to this key define types (or classes) of "
"documents and the properties associated with those types. Shell and COM "
"applications use the information stored under this key."
msgstr ""

msgid ""
"Registry entries subordinate to this key define the preferences of the "
"current user. These preferences include the settings of environment "
"variables, data about program groups, colors, printers, network connections, "
"and application preferences."
msgstr ""

msgid ""
"Registry entries subordinate to this key define the physical state of the "
"computer, including data about the bus type, system memory, and installed "
"hardware and software."
msgstr ""

msgid ""
"Registry entries subordinate to this key define the default user "
"configuration for new users on the local computer and the user configuration "
"for the current user."
msgstr ""

msgid ""
"Registry entries subordinate to this key allow you to access performance "
"data. The data is not actually stored in the registry; the registry "
"functions cause the system to collect the data from its source."
msgstr ""

msgid ""
"Contains information about the current hardware profile of the local "
"computer system."
msgstr ""

msgid "This key is not used in versions of Windows after 98."
msgstr ""

msgid "Access Rights"
msgstr ""

msgid ""
"For more information, see `Registry Key Security and Access <https://msdn."
"microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx>`__."
msgstr ""

msgid ""
"Combines the STANDARD_RIGHTS_REQUIRED, :const:`KEY_QUERY_VALUE`, :const:"
"`KEY_SET_VALUE`, :const:`KEY_CREATE_SUB_KEY`, :const:"
"`KEY_ENUMERATE_SUB_KEYS`, :const:`KEY_NOTIFY`, and :const:`KEY_CREATE_LINK` "
"access rights."
msgstr ""

msgid ""
"Combines the STANDARD_RIGHTS_WRITE, :const:`KEY_SET_VALUE`, and :const:"
"`KEY_CREATE_SUB_KEY` access rights."
msgstr ""

msgid ""
"Combines the STANDARD_RIGHTS_READ, :const:`KEY_QUERY_VALUE`, :const:"
"`KEY_ENUMERATE_SUB_KEYS`, and :const:`KEY_NOTIFY` values."
msgstr ""

msgid "Equivalent to :const:`KEY_READ`."
msgstr ""

msgid "Required to query the values of a registry key."
msgstr ""

msgid "Required to create, delete, or set a registry value."
msgstr ""

msgid "Required to create a subkey of a registry key."
msgstr ""

msgid "Required to enumerate the subkeys of a registry key."
msgstr ""

msgid ""
"Required to request change notifications for a registry key or for subkeys "
"of a registry key."
msgstr ""

msgid "Reserved for system use."
msgstr ""

msgid "64-bit Specific"
msgstr ""

msgid ""
"For more information, see `Accessing an Alternate Registry View <https://"
"msdn.microsoft.com/en-us/library/aa384129(v=VS.85).aspx>`__."
msgstr ""

msgid ""
"Indicates that an application on 64-bit Windows should operate on the 64-bit "
"registry view. On 32-bit Windows, this constant is ignored."
msgstr ""

msgid ""
"Indicates that an application on 64-bit Windows should operate on the 32-bit "
"registry view. On 32-bit Windows, this constant is ignored."
msgstr ""

msgid "Value Types"
msgstr ""

msgid ""
"For more information, see `Registry Value Types <https://msdn.microsoft.com/"
"en-us/library/ms724884%28v=VS.85%29.aspx>`__."
msgstr ""

msgid "Binary data in any form."
msgstr ""

msgid "32-bit number."
msgstr ""

msgid ""
"A 32-bit number in little-endian format. Equivalent to :const:`REG_DWORD`."
msgstr ""

msgid "A 32-bit number in big-endian format."
msgstr ""

msgid ""
"Null-terminated string containing references to environment variables "
"(``%PATH%``)."
msgstr ""

msgid "A Unicode symbolic link."
msgstr ""

msgid ""
"A sequence of null-terminated strings, terminated by two null characters. "
"(Python handles this termination automatically.)"
msgstr ""

msgid "No defined value type."
msgstr ""

msgid "A 64-bit number."
msgstr ""

msgid ""
"A 64-bit number in little-endian format. Equivalent to :const:`REG_QWORD`."
msgstr ""

msgid "A device-driver resource list."
msgstr ""

msgid "A hardware setting."
msgstr ""

msgid "A hardware resource list."
msgstr ""

msgid "A null-terminated string."
msgstr ""

msgid "Registry Handle Objects"
msgstr ""

msgid ""
"This object wraps a Windows HKEY object, automatically closing it when the "
"object is destroyed.  To guarantee cleanup, you can call either the :meth:"
"`~PyHKEY.Close` method on the object, or the :func:`CloseKey` function."
msgstr ""

msgid "All registry functions in this module return one of these objects."
msgstr ""

msgid ""
"All registry functions in this module which accept a handle object also "
"accept an integer, however, use of the handle object is encouraged."
msgstr ""

msgid "Handle objects provide semantics for :meth:`__bool__` -- thus ::"
msgstr ""

msgid ""
"will print ``Yes`` if the handle is currently valid (has not been closed or "
"detached)."
msgstr ""

msgid ""
"The object also support comparison semantics, so handle objects will compare "
"true if they both reference the same underlying Windows handle value."
msgstr ""

msgid ""
"Handle objects can be converted to an integer (e.g., using the built-in :"
"func:`int` function), in which case the underlying Windows handle value is "
"returned.  You can also use the :meth:`~PyHKEY.Detach` method to return the "
"integer handle, and also disconnect the Windows handle from the handle "
"object."
msgstr ""

msgid "Closes the underlying Windows handle."
msgstr ""

msgid "If the handle is already closed, no error is raised."
msgstr ""

msgid "Detaches the Windows handle from the handle object."
msgstr ""

msgid ""
"The result is an integer that holds the value of the handle before it is "
"detached.  If the handle is already detached or closed, this will return "
"zero."
msgstr ""

msgid ""
"After calling this function, the handle is effectively invalidated, but the "
"handle is not closed.  You would call this function when you need the "
"underlying Win32 handle to exist beyond the lifetime of the handle object."
msgstr ""

msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.PyHKEY.Detach`` with "
"argument ``key``."
msgstr ""

msgid ""
"The HKEY object implements :meth:`~object.__enter__` and :meth:`~object."
"__exit__` and thus supports the context protocol for the :keyword:`with` "
"statement::"
msgstr ""

msgid ""
"will automatically close *key* when control leaves the :keyword:`with` block."
msgstr ""
